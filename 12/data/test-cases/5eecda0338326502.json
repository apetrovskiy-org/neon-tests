{
  "uid" : "5eecda0338326502",
  "name" : "test_cost_resize_account",
  "fullName" : "integration.tests.economy.test_economics.TestEconomics#test_cost_resize_account",
  "historyId" : "9e45d41037110c3e3b9d622220f3c108",
  "time" : {
    "start" : 1643804023669,
    "stop" : 1643804026465,
    "duration" : 2796
  },
  "description" : "Verify how much cost account resize",
  "descriptionHtml" : "<p>Verify how much cost account resize</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nassert Decimal('0.0000154817500') > Decimal('2.64771200')",
  "statusTrace" : "self = <integration.tests.economy.test_economics.TestEconomics object at 0x7f8929c0efd0>\n\n    def test_cost_resize_account(self):\n        \"\"\"Verify how much cost account resize\"\"\"\n        sol_balance_before = self.operator.get_solana_balance()\n        neon_balance_before = self.operator.get_neon_balance()\n        contract_path = (pathlib.Path(__file__).parent / \"contracts\" / \"Counter.sol\").absolute()  # Deploy 17 steps\n        compiled = solcx.compile_files([contract_path], output_values=[\"abi\", \"bin\"], solc_version=\"0.8.10\")\n    \n        contract_interface = self.get_compiled_contract(\"Counter\", compiled)\n    \n        contract_tx = self.web3_client.deploy_contract(\n            self.acc,\n            abi=contract_interface[\"abi\"],\n            bytecode=contract_interface[\"bin\"],\n            gas=10000000,\n            constructor_args=[1000],\n        )\n    \n        contract = self.web3_client.eth.contract(address=contract_tx[\"contractAddress\"], abi=contract_interface[\"abi\"])\n    \n        sol_balance_before_increase = self.operator.get_solana_balance()\n    \n        tx = contract.functions.inc().buildTransaction(\n            {\"nonce\": self.web3_client.eth.get_transaction_count(self.acc.address), \"gas\": 100000, \"gasPrice\": 100000}\n        )\n        tx = self.web3_client.eth.account.sign_transaction(tx, self.acc.key)\n        signature = self.web3_client.eth.send_raw_transaction(tx.rawTransaction)\n        receipt = self.web3_client.eth.wait_for_transaction_receipt(signature)\n        sol_balance_after = self.operator.get_solana_balance()\n        neon_balance_after = self.operator.get_neon_balance()\n        assert sol_balance_before > sol_balance_before_increase > sol_balance_after\n        assert neon_balance_after > neon_balance_before\n>       self.assert_profit(sol_balance_before - sol_balance_after, neon_balance_after - neon_balance_before)\n\nintegration/tests/economy/test_economics.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.economy.test_economics.TestEconomics object at 0x7f8929c0efd0>\nsol_diff = 26477120, neon_diff = 61927\n\n    @allure.step(\"Verify operator profit\")\n    def assert_profit(self, sol_diff, neon_diff):\n        sol_amount = sol_diff / LAMPORT_PER_SOL\n        if neon_diff < 0:\n            raise AssertionError(f\"NEON has negative difference {neon_diff}\")\n        # neon_amount = self.web3_client.fromWei(neon_diff, \"ether\")\n        neon_amount = neon_diff / LAMPORT_PER_SOL\n        sol_cost = Decimal(sol_amount, DECIMAL_CONTEXT) * Decimal(SOL_PRICE, DECIMAL_CONTEXT)\n        neon_cost = Decimal(neon_amount, DECIMAL_CONTEXT) * Decimal(NEON_PRICE, DECIMAL_CONTEXT)\n        msg = \"Operator receive {:.9f} NEON ({:.2f} $) and spend {:.9f} SOL ({:.2f} $)\".format(neon_amount, neon_cost, sol_amount, sol_cost)\n        with allure.step(msg):\n>           assert neon_cost > sol_cost, msg\nE           AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nE           assert Decimal('0.0000154817500') > Decimal('2.64771200')\n\nintegration/tests/economy/test_economics.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1643804008345,
      "stop" : 1643804008347,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1643804008345,
      "stop" : 1643804008345,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1643804008347,
      "stop" : 1643804009030,
      "duration" : 683
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1643804009031,
      "stop" : 1643804009031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1643804009031,
      "stop" : 1643804009034,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1643804009034,
      "stop" : 1643804011669,
      "duration" : 2635
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator initial balance: 926156758.2492968 NEON 6996680.796797266 SOL",
      "time" : {
        "start" : 1643804010754,
        "stop" : 1643804010754,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1643804010754,
        "stop" : 1643804010768,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 100 NEON from faucet for 0x172bea184a0b2E3E5AD555050606c7a2A1d3f585",
      "time" : {
        "start" : 1643804010768,
        "stop" : 1643804011669,
        "duration" : 901
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1643804009034,
      "stop" : 1643804009034,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1643804023668,
      "stop" : 1643804023668,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1643804023668,
      "stop" : 1643804023668,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify how much cost account resize",
    "status" : "failed",
    "statusMessage" : "AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nassert Decimal('0.0000154817500') > Decimal('2.64771200')",
    "statusTrace" : "self = <integration.tests.economy.test_economics.TestEconomics object at 0x7f8929c0efd0>\n\n    def test_cost_resize_account(self):\n        \"\"\"Verify how much cost account resize\"\"\"\n        sol_balance_before = self.operator.get_solana_balance()\n        neon_balance_before = self.operator.get_neon_balance()\n        contract_path = (pathlib.Path(__file__).parent / \"contracts\" / \"Counter.sol\").absolute()  # Deploy 17 steps\n        compiled = solcx.compile_files([contract_path], output_values=[\"abi\", \"bin\"], solc_version=\"0.8.10\")\n    \n        contract_interface = self.get_compiled_contract(\"Counter\", compiled)\n    \n        contract_tx = self.web3_client.deploy_contract(\n            self.acc,\n            abi=contract_interface[\"abi\"],\n            bytecode=contract_interface[\"bin\"],\n            gas=10000000,\n            constructor_args=[1000],\n        )\n    \n        contract = self.web3_client.eth.contract(address=contract_tx[\"contractAddress\"], abi=contract_interface[\"abi\"])\n    \n        sol_balance_before_increase = self.operator.get_solana_balance()\n    \n        tx = contract.functions.inc().buildTransaction(\n            {\"nonce\": self.web3_client.eth.get_transaction_count(self.acc.address), \"gas\": 100000, \"gasPrice\": 100000}\n        )\n        tx = self.web3_client.eth.account.sign_transaction(tx, self.acc.key)\n        signature = self.web3_client.eth.send_raw_transaction(tx.rawTransaction)\n        receipt = self.web3_client.eth.wait_for_transaction_receipt(signature)\n        sol_balance_after = self.operator.get_solana_balance()\n        neon_balance_after = self.operator.get_neon_balance()\n        assert sol_balance_before > sol_balance_before_increase > sol_balance_after\n        assert neon_balance_after > neon_balance_before\n>       self.assert_profit(sol_balance_before - sol_balance_after, neon_balance_after - neon_balance_before)\n\nintegration/tests/economy/test_economics.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.economy.test_economics.TestEconomics object at 0x7f8929c0efd0>\nsol_diff = 26477120, neon_diff = 61927\n\n    @allure.step(\"Verify operator profit\")\n    def assert_profit(self, sol_diff, neon_diff):\n        sol_amount = sol_diff / LAMPORT_PER_SOL\n        if neon_diff < 0:\n            raise AssertionError(f\"NEON has negative difference {neon_diff}\")\n        # neon_amount = self.web3_client.fromWei(neon_diff, \"ether\")\n        neon_amount = neon_diff / LAMPORT_PER_SOL\n        sol_cost = Decimal(sol_amount, DECIMAL_CONTEXT) * Decimal(SOL_PRICE, DECIMAL_CONTEXT)\n        neon_cost = Decimal(neon_amount, DECIMAL_CONTEXT) * Decimal(NEON_PRICE, DECIMAL_CONTEXT)\n        msg = \"Operator receive {:.9f} NEON ({:.2f} $) and spend {:.9f} SOL ({:.2f} $)\".format(neon_amount, neon_cost, sol_amount, sol_cost)\n        with allure.step(msg):\n>           assert neon_cost > sol_cost, msg\nE           AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nE           assert Decimal('0.0000154817500') > Decimal('2.64771200')\n\nintegration/tests/economy/test_economics.py:54: AssertionError",
    "steps" : [ {
      "name" : "Verify operator profit",
      "time" : {
        "start" : 1643804026464,
        "stop" : 1643804026465,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nassert Decimal('0.0000154817500') > Decimal('2.64771200')\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/economy/test_economics.py\", line 54, in assert_profit\n    assert neon_cost > sol_cost, msg\n",
      "steps" : [ {
        "name" : "Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)",
        "time" : {
          "start" : 1643804026464,
          "stop" : 1643804026465,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nassert Decimal('0.0000154817500') > Decimal('2.64771200')\n",
        "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/economy/test_economics.py\", line 54, in assert_profit\n    assert neon_cost > sol_cost, msg\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sol_diff",
        "value" : "26477120"
      }, {
        "name" : "neon_diff",
        "value" : "61927"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1643804027734,
      "stop" : 1643804028124,
      "duration" : 390
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 926156658.249766 NEON 6996680.649082906 SOL",
      "time" : {
        "start" : 1643804028124,
        "stop" : 1643804028124,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1643804028127,
      "stop" : 1643804028127,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Operator economy"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.economy"
  }, {
    "name" : "suite",
    "value" : "test_economics"
  }, {
    "name" : "subSuite",
    "value" : "TestEconomics"
  }, {
    "name" : "host",
    "value" : "fv-az28-456"
  }, {
    "name" : "thread",
    "value" : "1721-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.economy.test_economics"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Operator economy",
      "messageRegex" : ".*Operator receive.*",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "3b8bbf16b7bd411a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-tests/11//#testresult/3b8bbf16b7bd411a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nassert Decimal('0.0000154817500') > Decimal('2.64771200')",
        "time" : {
          "start" : 1643803520977,
          "stop" : 1643803524843,
          "duration" : 3866
        }
      }, {
        "uid" : "822c4149280bd410",
        "reportUrl" : "https://neonlabsorg.github.io/neon-tests/10//#testresult/822c4149280bd410",
        "status" : "failed",
        "statusDetails" : "AssertionError: Operator receive 0.000061927 NEON (0.00 $) and spend 0.026477120 SOL (2.65 $)\nassert Decimal('0.0000154817500') > Decimal('2.64771200')",
        "time" : {
          "start" : 1643802875501,
          "stop" : 1643802879318,
          "duration" : 3817
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5eecda0338326502.json",
  "parameterValues" : [ ]
}