{
  "uid" : "9b7019dee72e725c",
  "name" : "test_account_creation",
  "fullName" : "integration.tests.economy.test_economics.TestEconomics#test_account_creation",
  "historyId" : "59e198aaed7a25f202fc4dc5a2c9b5aa",
  "time" : {
    "start" : 1643804011699,
    "stop" : 1643804012607,
    "duration" : 908
  },
  "description" : "Verify account creation spend SOL",
  "descriptionHtml" : "<p>Verify account creation spend SOL</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nassert Decimal('0.00') > Decimal('0')",
  "statusTrace" : "self = <integration.tests.economy.test_economics.TestEconomics object at 0x7f892a016310>\n\n    @pytest.mark.only_stands\n    def test_account_creation(self):\n        \"\"\"Verify account creation spend SOL\"\"\"\n        sol_balance_before = self.operator.get_solana_balance()\n        neon_balance_before = self.operator.get_neon_balance()\n        acc = self.web3_client.eth.account.create()\n        assert self.web3_client.eth.get_balance(acc.address) == Decimal(0)\n        sol_balance_after = self.operator.get_solana_balance()\n        neon_balance_after = self.operator.get_neon_balance()\n        assert neon_balance_after == neon_balance_before\n>       self.assert_profit(sol_balance_before - sol_balance_after, neon_balance_after - neon_balance_before)\n\nintegration/tests/economy/test_economics.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.economy.test_economics.TestEconomics object at 0x7f892a016310>\nsol_diff = 0, neon_diff = 0\n\n    @allure.step(\"Verify operator profit\")\n    def assert_profit(self, sol_diff, neon_diff):\n        sol_amount = sol_diff / LAMPORT_PER_SOL\n        if neon_diff < 0:\n            raise AssertionError(f\"NEON has negative difference {neon_diff}\")\n        # neon_amount = self.web3_client.fromWei(neon_diff, \"ether\")\n        neon_amount = neon_diff / LAMPORT_PER_SOL\n        sol_cost = Decimal(sol_amount, DECIMAL_CONTEXT) * Decimal(SOL_PRICE, DECIMAL_CONTEXT)\n        neon_cost = Decimal(neon_amount, DECIMAL_CONTEXT) * Decimal(NEON_PRICE, DECIMAL_CONTEXT)\n        msg = \"Operator receive {:.9f} NEON ({:.2f} $) and spend {:.9f} SOL ({:.2f} $)\".format(neon_amount, neon_cost, sol_amount, sol_cost)\n        with allure.step(msg):\n>           assert neon_cost > sol_cost, msg\nE           AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nE           assert Decimal('0.00') > Decimal('0')\n\nintegration/tests/economy/test_economics.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1643804008345,
      "stop" : 1643804008347,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1643804008345,
      "stop" : 1643804008345,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1643804008347,
      "stop" : 1643804009030,
      "duration" : 683
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1643804009031,
      "stop" : 1643804009031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1643804009031,
      "stop" : 1643804009034,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1643804009034,
      "stop" : 1643804011669,
      "duration" : 2635
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator initial balance: 926156758.2492968 NEON 6996680.796797266 SOL",
      "time" : {
        "start" : 1643804010754,
        "stop" : 1643804010754,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1643804010754,
        "stop" : 1643804010768,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 100 NEON from faucet for 0x172bea184a0b2E3E5AD555050606c7a2A1d3f585",
      "time" : {
        "start" : 1643804010768,
        "stop" : 1643804011669,
        "duration" : 901
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1643804009034,
      "stop" : 1643804009034,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1643804009034,
      "stop" : 1643804009034,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1643804011670,
      "stop" : 1643804011670,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify account creation spend SOL",
    "status" : "failed",
    "statusMessage" : "AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nassert Decimal('0.00') > Decimal('0')",
    "statusTrace" : "self = <integration.tests.economy.test_economics.TestEconomics object at 0x7f892a016310>\n\n    @pytest.mark.only_stands\n    def test_account_creation(self):\n        \"\"\"Verify account creation spend SOL\"\"\"\n        sol_balance_before = self.operator.get_solana_balance()\n        neon_balance_before = self.operator.get_neon_balance()\n        acc = self.web3_client.eth.account.create()\n        assert self.web3_client.eth.get_balance(acc.address) == Decimal(0)\n        sol_balance_after = self.operator.get_solana_balance()\n        neon_balance_after = self.operator.get_neon_balance()\n        assert neon_balance_after == neon_balance_before\n>       self.assert_profit(sol_balance_before - sol_balance_after, neon_balance_after - neon_balance_before)\n\nintegration/tests/economy/test_economics.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.economy.test_economics.TestEconomics object at 0x7f892a016310>\nsol_diff = 0, neon_diff = 0\n\n    @allure.step(\"Verify operator profit\")\n    def assert_profit(self, sol_diff, neon_diff):\n        sol_amount = sol_diff / LAMPORT_PER_SOL\n        if neon_diff < 0:\n            raise AssertionError(f\"NEON has negative difference {neon_diff}\")\n        # neon_amount = self.web3_client.fromWei(neon_diff, \"ether\")\n        neon_amount = neon_diff / LAMPORT_PER_SOL\n        sol_cost = Decimal(sol_amount, DECIMAL_CONTEXT) * Decimal(SOL_PRICE, DECIMAL_CONTEXT)\n        neon_cost = Decimal(neon_amount, DECIMAL_CONTEXT) * Decimal(NEON_PRICE, DECIMAL_CONTEXT)\n        msg = \"Operator receive {:.9f} NEON ({:.2f} $) and spend {:.9f} SOL ({:.2f} $)\".format(neon_amount, neon_cost, sol_amount, sol_cost)\n        with allure.step(msg):\n>           assert neon_cost > sol_cost, msg\nE           AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nE           assert Decimal('0.00') > Decimal('0')\n\nintegration/tests/economy/test_economics.py:54: AssertionError",
    "steps" : [ {
      "name" : "Verify operator profit",
      "time" : {
        "start" : 1643804012606,
        "stop" : 1643804012606,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nassert Decimal('0.00') > Decimal('0')\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/economy/test_economics.py\", line 54, in assert_profit\n    assert neon_cost > sol_cost, msg\n",
      "steps" : [ {
        "name" : "Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)",
        "time" : {
          "start" : 1643804012606,
          "stop" : 1643804012606,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nassert Decimal('0.00') > Decimal('0')\n",
        "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/economy/test_economics.py\", line 54, in assert_profit\n    assert neon_cost > sol_cost, msg\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sol_diff",
        "value" : "0"
      }, {
        "name" : "neon_diff",
        "value" : "0"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1643804027734,
      "stop" : 1643804028124,
      "duration" : 390
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 926156658.249766 NEON 6996680.649082906 SOL",
      "time" : {
        "start" : 1643804028124,
        "stop" : 1643804028124,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1643804028127,
      "stop" : 1643804028127,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Operator economy"
  }, {
    "name" : "tag",
    "value" : "only_stands"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.economy"
  }, {
    "name" : "suite",
    "value" : "test_economics"
  }, {
    "name" : "subSuite",
    "value" : "TestEconomics"
  }, {
    "name" : "host",
    "value" : "fv-az28-456"
  }, {
    "name" : "thread",
    "value" : "1721-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.economy.test_economics"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Operator economy",
      "messageRegex" : ".*Operator receive.*",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "d5ef8cf0676794b7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-tests/11//#testresult/d5ef8cf0676794b7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nassert Decimal('0.00') > Decimal('0')",
        "time" : {
          "start" : 1643803503644,
          "stop" : 1643803505086,
          "duration" : 1442
        }
      }, {
        "uid" : "e340eedf97002ede",
        "reportUrl" : "https://neonlabsorg.github.io/neon-tests/10//#testresult/e340eedf97002ede",
        "status" : "failed",
        "statusDetails" : "AssertionError: Operator receive 0.000000000 NEON (0.00 $) and spend 0.000000000 SOL (0.00 $)\nassert Decimal('0.00') > Decimal('0')",
        "time" : {
          "start" : 1643802859544,
          "stop" : 1643802860859,
          "duration" : 1315
        }
      } ]
    },
    "tags" : [ "only_stands" ]
  },
  "source" : "9b7019dee72e725c.json",
  "parameterValues" : [ ]
}